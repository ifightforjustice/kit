import stdlib;

defclass[T] move box *T;

access box[_] {
  func[T] do_init(u *box[T]) void {
    u->~ = @[*T]cast(checkmalloc(sizeof@[T]));
    init(u->~);
  }

  func[T] do_copy(dest *box[T], src *box[T]) void {
    dest->~ = @[*T]cast(checkmalloc(sizeof@[T]));
    copy(dest->~, src->~);
  }

  func[T] do_destroy(u *box[T]) void {
    destroy(u->~);
    free(@[*void]cast(u->~));
  }

  func[T] oo(x *box[T]) *T {
    return x->~;
  }
}

func[T] embox(val T) box[T] {
  ret box[T];
  *oo(&ret) = val;
  return ret;
}
