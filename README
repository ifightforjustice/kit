        Kira v0.0000...1A.x

At some future date, Kira will be a programming language.  Right
now, it's a work in progress.  Use build_windows.bat or
build_linux.sh to build it, or just pass *.c to your C compiler.
Then I recommend running

   out --test

to see if the tests pass.

Then, try running,

   cd examples
   ..\out foo
   cl main.c foo.obj
   main

to see things actually working.  The current directory structure is:

   s1_src - stage 1 compiler, written in C, compiled by invoking
   build_windows.bat.

   src - someday, a self-hosting compiler buildable by s1_src

   examples - examples for s1_src to run, etc

Here's the project timeline:

   1. Parsing.  (DONE)
   2. Typechecking/name-resolving.  (DONE)
   3. Generate code, i.e. have a working compiler.  (DONE)
   4. Cleanup error messages to have useful source information. (BETTER)
   5. Cleanup the language to make it more usable. (GOOD ENOUGH)
      Wishlist (waiting for these features specifically needed):
       A. Structure / array initialization syntax.
       B. Packed struct types.
       C. Destructuring assignment.
       D. Incr/decr and "+="-type operators.
   6. Linux support.
   7. Make a self-hosted implementation (adding improvements and
      fixes to the C implementation when useful).
   8. ...

The language implemented in s1_src is merely "C, with templates,
constructors/destructors, elementary encapsulation, and tagged enum
types."  Future versions of the language will be more advanced.
s1_src is a trade-off between the convenience of implementing
s1_src and the convenience of implementing src.
