import stdlib;

defclass[T] move uniq *T;

access uniq[_] {
  func[T] do_init(u *uniq[T]) void {
    u->~ = null;
  }

  func[T] do_copy(dest *uniq[T], src *uniq[T]) void {
    if src->~ == null {
      dest->~ = null;
    } else {
      dest->~ = @[*T]cast(checkmalloc(sizeof@[T]));
      copy(dest->~, src->~);
    }
  }

  func[T] do_destroy(u *uniq[T]) void {
    if u->~ == null {
      destroy(u->~);
    }
    free(@[*void]cast(u->~));
  }

  func[T] oo(x *uniq[T]) *T {
    return x->~;
  }
}
